swagger: "2.0"
info:
  description: "This is a simple document for the usage of PetTracking App."
  version: "1.0.0"
  title: "Swagger PetTracking"
  contact:
    email: "hu_minghao@outlook.com"
host: "pacific-plateau-97284.herokuapp.com"
basePath: "/"
tags:
- name: "pet"
  description: "Everything about your Pets"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/fwantx/MSDExceptional"
schemes:
- "http"
paths:
  /pets:
    post:
      tags:
      - "pet"
      summary: "Add a new pet"
      description: "Add a new pet to the store without a shelter"
      operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        201:
          description: "Created successfully"
        405:
          description: "Invalid input"
  /pet/{petId}:
    get:
      tags:
      - "pet"
      summary: "Find pet by ID"
      description: "Returns a single pet"
      operationId: "getPetById"
      produces:
      - "application/json"
      parameters:
      - name: "petId"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful get"
          schema:
            $ref: "#/definitions/Pet"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
    put:
      tags:
      - "pet"
      summary: "Update an existing pet"
      description: ""
      operationId: "updatePet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        200:
          description: "Successful put"
          schema:
            $ref: "#/definitions/Pet"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "pet"
      summary: "Deletes a pet"
      description: ""
      operationId: "deletePet"
      produces:
      - "application/json"
      parameters:
      - name: "petId"
        in: "path"
        description: "Pet id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful delete"
          schema:
            $ref: "#/definitions/Pet"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
  /shelters/{shelterId}/pets:
    post:
      tags:
      - "pet"
      summary: "Add a new pet with a certain shelter"
      description: ""
      operationId: "addPetWithShelter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "shelterId"
        in: "path"
        description: "ID of a certain shelter"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "Pet object that needs to be added to the database"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
              example: "Java"
            gender:
              type: "string"
              example: "male"
            color:
              type: "string"
              example: "white"
            type:
              type: "string"
              example: "Dog"
            breed:
              type: "string"
              example: "Husky"
            size:
              type: "integer"
              format: "int64"
              example: 10
            found_location_x:
              type: "integer"
              format: "int64"
            found_location_y:
              type: "integer"
              format: "int64"
      responses:
        201:
          description: "Created successfully"
        405:
          description: "Invalid input"
definitions:
  City:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "Seattle"
    xml:
      name: "City"
  Shelter:
    type: "object"
    required:
    - "name"
    - "kennel_num"
    - "city"
    - "location_x"
    - "location_y"
    properties:
      id:
        type: "integer"
        example: 1
      name:
        type: "string"
        example: "SLUShelter"
      kennel_num:
        type: "integer"
        example: 100
      city:
        $ref: "#/definitions/City"
      location_x:
        type: "integer"
        example: 23
      location_y:
        type: "integer"
        example: 23
    xml:
      name: "Shelter"
  Pet:
    type: "object"
    required:
    - "name"
    - "gender"
    - "color"
    - "type"
    - "breed"
    - "size"
    - "found_location_x"
    - "found_location_y"
    properties:
      id:
        type: "integer"
        example: 1
      name:
        type: "string"
        example: "Java"
      gender:
        type: "string"
        example: "male"
      color:
        type: "string"
        example: "white"
      type:
        type: "string"
        example: "Dog"
      breed:
        type: "string"
        example: "Husky"
      size:
        type: "integer"
        format: "int64"
        example: 10
      found_location_x:
        type: "integer"
        format: "int64"
      found_location_y:
        type: "integer"
        format: "int64"
      shelter:
        $ref: "#/definitions/Shelter"
    xml:
      name: "Pet"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"