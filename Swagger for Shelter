swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger ShelterStore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/"
tags:
- name: "shelter"
  description: "Everything about your Shelter"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /shelters:
    post:
      tags:
      - "shelter"
      summary: "Add a new shelter"
      description: "Add a new shelter to the store"
      operationId: "addShelter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Shelter object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Shelter"
      responses:
        201:
          description: "Created successfully"
        405:
          description: "Invalid input"
  /shelter/{shelterId}:
    get:
      tags:
      - "shelter"
      summary: "Find shelter by ID"
      description: "Returns a single shelter"
      operationId: "getShelterById"
      produces:
      - "application/json"
      parameters:
      - name: "shelterId"
        in: "path"
        description: "ID of shelter to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Shelter"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Shelter not found"
    put:
      tags:
      - "shelter"
      summary: "Updates a shelter in the store"
      description: ""
      operationId: "updateShelter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Shelter that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Shelter"
      responses:
        201:
          description: "Updated successfully"
          schema:
            $ref: "#/definitions/Shelter"
        405:
          description: "Invalid input"
    delete:
      tags:
      - "shelter"
      summary: "Deletes a shelter"
      description: ""
      operationId: "deleteShelter"
      produces:
      - "application/json"
      parameters:
      - name: "shelterId"
        in: "path"
        description: "Shelter id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful delete"
          schema:
            $ref: "#/definitions/Shelter"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Shelter not found"
  /cities/{cityId}}/shelters:
    get:
      tags:
      - "shelter"
      summary: "Find shelter by cityID"
      description: "Returns a single shelter"
      operationId: "getShelterByCityId"
      produces:
      - "application/json"
      parameters:
      - name: "cityId"
        in: "path"
        description: "ID of a city"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Shelter"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Shelter in this city not found"
    post:
      tags:
      - "shelter"
      summary: "Add a new shelter in certain city"
      description: "Add a new shelter in certain city"
      operationId: "addShelterInCity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cityId"
        in: "path"
        description: "ID of a city"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Shelter object that needs to be added to the certain city"
        required: true
        schema:
          type: "object"
          properties:
            id:
              type: "integer"
              format: "int64"
              example: 1
            name:
              type: "string"
              example: "westlake Shelter"
            kennelNum:
              type: "integer"
              format: "int64"
              example: 50
            locationX:
              type: "integer"
              format: "int64"
              example: 12
            locationY:
              type: "integer"
              format: "int64"
              example: 64
      responses:
        201:
          description: "Created successfully"
        405:
          description: "Invalid input"
definitions:
  City:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Seattle"
    xml:
      name: "City"    
  Shelter:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      name:
        type: "string"
        example: "westlake Shelter"
      kennelNum:
        type: "integer"
        format: "int64"
        example: 50
      city:
        $ref: "#/definitions/City"
      locationX:
        type: "integer"
        format: "int64"
        example: 12
      locationY:
        type: "integer"
        format: "int64"
        example: 64
    xml:
      name: "Shelter"    
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
